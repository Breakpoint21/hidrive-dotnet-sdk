version: 0.3.0.{build}
configuration: Release
init:
- cmd: if "%APPVEYOR_REPO_TAG%" NEQ "true" set BUILD_QUALITY=-unstable
assembly_info:
  patch: true
  file: 'src\SharedAssemblyInfo.cs'
  assembly_version: $(SEMVER)
  assembly_file_version: $(SEMVER).{build}
  assembly_informational_version: $(SEMVER)$(BUILD_QUALITY)
environment:
  SEMVER: 0.3.0
  HIDRIVE_CLIENTID:
    secure: b7+g2EXdhujw/wEzs0mUgZyXEM5iFmulfbcFQxORWmprggQWe1MKwkZjCw3MLlRE
  HIDRIVE_CLIENTSECRET:
    secure: 3udqP0meKf9lw+EhwB/mvVfG2tXBvsS3SwWpQfs7RsPNs4FZy3iHLwwH7v5L25IH
  HIDRIVE_REFRESHTOKEN:
    secure: 2aAKUSlZnV6PubvLx1HU1PMPS4YMcaYeHDwszCDCBEw=
install:
- cmd: tools\nuget.exe restore
before_build:
- ps: |
      #copy src\Kyrodan.HiDrive.Tests\ClientConfiguration.cs.tmpl src\Kyrodan.HiDrive.Tests\ClientConfiguration.cs
      $original_file = 'src\Kyrodan.HiDrive.Tests\ClientConfiguration.cs.tmpl'
      $destination_file =  'src\Kyrodan.HiDrive.Tests\ClientConfiguration.cs'
      (Get-Content $original_file) | Foreach-Object {
        $_ -replace '{{ClientId}}', $env:HIDRIVE_CLIENTID `
           -replace '{{ClientSecret}}', $env:HIDRIVE_CLIENTSECRET `
           -replace '{{RefreshToken}}', $env:HIDRIVE_REFRESHTOKEN 
      } | Set-Content $destination_file
build:
  publish_nuget: true
  verbosity: minimal
after_build:
- cmd: tools\7za.exe a -tzip Kyrodan.HiDriveSDK.%SEMVER%%BUILD_QUALITY%.zip .\src\Kyrodan.HiDrive\bin\%configuration%\*.*
artifacts:
- path: Kyrodan.HiDriveSDK.*.zip
  name: ZIP-Distribution
deploy:
- provider: NuGet
  api_key:
    secure: sGR4t0DGDW9V8uCS3wkQS/is2NnGc+pizHdfDBocXxuoDUIPQIxt6O4FanfPqTuG
  skip_symbols: false
  on:
    appveyor_repo_tag: true
- provider: GitHub
  auth_token:
    secure: zqGFJdh0d0e+S2Eyudc4gCjQqImkQutu/TsN9knDXJCXMaVl8izm9vnMK9ayX7VP
  artifact: Kyrodan.HiDriveSDK.*.zip
  draft: true
  prerelease: false
  on:
    appveyor_repo_tag: true
